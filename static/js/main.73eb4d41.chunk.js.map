{"version":3,"sources":["Components/Searchbar/Searchbar.jsx","Components/services/Api.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Modal/Modal.jsx","Components/Button/Button.jsx","App.jsx","index.js"],"names":["Searchbar","state","searchQuery","handleNameChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","Notiflix","Notify","failure","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","FetchImages","query","page","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","image","onClickImage","src","webformatURL","alt","tags","onClick","ImageGallery","onLargeImage","map","console","log","largeImageURL","id","modalRoot","document","querySelector","Modal","handleKeyDown","code","onCloseModal","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","Button","scrollTo","top","behavior","documentElement","scrollHeight","onClickBtn","App","loading","images","totalHits","largeImageUrl","hits","handleFormSubmit","handleLargeImage","imgUrl","toggleModal","incrementPage","prevState","prevProps","prevQuery","nextQuery","prevPage","nextPage","prevImages","respons","color","height","width","length","url","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.73eb4d41.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport Notiflix from 'notiflix';\r\n// import { toast } from 'react-toastify';\r\n// import {ImSearch} from 'react-icons/im';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n  };\r\n\r\n  handleNameChange = e => {\r\n    this.setState({ searchQuery: e.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.searchQuery.trim() === '') {\r\n      Notiflix.Notify.failure('Please, enter your query!');\r\n      // alert('Please, enter your query!');\r\n    }\r\n\r\n    this.props.onSubmit(this.state.searchQuery);\r\n    this.setState({ searchQuery: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            {/* <ImSearch style={{ margineRight: 8 }} /> */}\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleNameChange}\r\n            value={this.state.searchQuery}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Searchbar;\r\n","function FetchImages(query, page) {\r\n  const BASE_URL = 'pixabay.com/api/';\r\n  const KEY = '22661367-29e263943b27fbc7c6f830e79';\r\n\r\n  return fetch(\r\n    `https://${BASE_URL}?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`Error with ${query}`));\r\n  });\r\n}\r\n\r\nexport default FetchImages;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction ImageGalleryItem({ image, onClickImage }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={image.webformatURL}\r\n        alt={image.tags}\r\n        onClick={onClickImage}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  onClickImage: PropTypes.func,\r\n  image: PropTypes.object,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import { Component } from 'react';\r\nimport ImageGalleryItem from 'Components/ImageGalleryItem';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ImageGallery extends Component {\r\n  render() {\r\n    const { searchQuery, onLargeImage } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <ul className=\"ImageGallery\">\r\n          {searchQuery.map(image => {\r\n            console.log(image);\r\n            console.log(image.largeImageURL);\r\n\r\n            const onSelectLargeImg = () => onLargeImage(image.largeImageURL);\r\n\r\n            return (\r\n              <ImageGalleryItem key={image.id} image={image} onClickImage={onSelectLargeImg} />\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  onLargeImage: PropTypes.func,\r\n  images: PropTypes.array,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onCloseModal();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onCloseModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onCloseModal: PropTypes.func,\r\n  url: PropTypes.string,\r\n};\r\n\r\nexport default Modal;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Button extends Component {\r\n  componentDidMount() {\r\n    if (this.props.page === 1) {\r\n      window.scrollTo({\r\n        top: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    } else {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"BtnContainer\">\r\n        <button type=\"button\" className=\"Button\" onClick={this.props.onClickBtn}>\r\n          Load more\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  onClickBtn: PropTypes.func,\r\n  page: PropTypes.number,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\n// import { ToastContainer } from 'react-toastify';\n// import { v4 as uuidv4 } from 'uuid';\nimport Searchbar from 'Components/Searchbar';\nimport FetchImages from 'Components/services/Api';\nimport Notiflix from 'notiflix';\nimport ImageGallery from 'Components/ImageGallery';\nimport Modal from 'Components/Modal';\nimport Button from 'Components/Button/Button';\nimport Loader from 'react-loader-spinner';\n\nexport default class App extends Component {\n  state = {\n    searchQuery: '',\n    page: 1,\n    loading: false,\n    images: [],\n    totalHits: 0,\n    largeImageUrl: null,\n    hits: 12,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n    const prevImages = prevState.images;\n\n    if (prevQuery !== nextQuery || prevPage !== nextPage) {\n      this.setState({ loading: true });\n      FetchImages(nextQuery, nextPage).then(respons => {\n        // console.log(respons);\n        const { totalHits, hits } = respons;\n\n        if (nextPage === 1) {\n          this.setState({\n            images: [...hits],\n            totalHits,\n            loading: false,\n          });\n          // console.log(totalHits);\n          // console.log(hits);\n        } else {\n          this.setState({\n            images: [...prevImages, ...hits],\n            totalHits,\n            page: nextPage,\n            loading: false,\n          });\n        }\n\n        if (totalHits === 0) {\n          Notiflix.Notify.failure('Please, enter your query!');\n        }\n      });\n    }\n  }\n\n  handleFormSubmit = searchQuery => {\n    this.setState({ searchQuery, page: 1 });\n  };\n\n  handleLargeImage = imgUrl => {\n    this.setState({ largeImageUrl: imgUrl });\n  };\n\n  toggleModal = () => {\n    this.setState(({ largeImageUrl }) => ({\n      largeImageUrl: !largeImageUrl,\n    }));\n  };\n\n  incrementPage = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  render() {\n    const { images, largeImageUrl, searchQuery, page, loading } = this.state;\n\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery searchQuery={images} onLargeImage={this.handleLargeImage} />\n\n        {loading && <Loader type=\"Circles\" color=\"#00BFFF\" height={80} width={80} />}\n\n        {images.length > 0 && (\n          <Button type=\"button\" className=\"Button\" onClickBtn={this.incrementPage} page={page} />\n        )}\n        {largeImageUrl && (\n          <Modal url={this.state.largeImageUrl} onCloseModal={this.toggleModal}>\n            <img src={largeImageUrl} alt={searchQuery} />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>,\n    document.getElementById('root'),\n);"],"sourceRoot":""}